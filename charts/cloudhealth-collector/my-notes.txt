Some commands for developers to work with:

helm repo add cloudhealth https://cloudhealth.github.io/helm/


To dry-run the helm chart:

helm install cloudhealth-collector --debug --dry-run --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME cloudhealth/cloudhealth-collector

To dry-run the helm chart in a namespace 'cloudhealth' with an HTTPS proxy:

helm install cloudhealth-collector -n cloudhealth --create-namespace --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME --set "customEnvVars[0].name=JAVA_OPTS" --set 'customEnvVars[0].value="-Dhttps.proxyHost=$PROXY_SERVER -Dhttps.proxyPort=$PROXY_PORT -Dhttps.nonProxyHosts=kubernetes.default.svc"' cloudhealth/cloudhealth-collector --debug --dry-run

To install helm for local collection dev testing:

helm install cloudhealth-collector --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME --set devArgs="\['upload_k8s_state_v4'\,'--verbose'\,'--endpoint'\,'http://192.168.1.124:9292'\]" cloudhealth/cloudhealth-collector

helm upgrade cloudhealth-collector -n dmz --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME --set devArgs="\['upload_k8s_state_v4'\,'--verbose'\]" cloudhealth/cloudhealth-collector

helm install cloudhealth-collector --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME,image.repository=cloudhealth/container-collector-dev cloudhealth/cloudhealth-collector
helm install cloudhealth-collector --set apiToken=477384950aee403eb8b1f88317d5f7193dc57fd11a9735fc,clusterName=gm-local-minikube,image.repository=latest-photon-image-2024-07-15,image.tag=latest,image.pullPolicy=Never cloudhealth/cloudhealth-collector --debug -n dmz --create-namespace


helm install cloudhealth-collector --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME,image.repository=latest-libs,image.pullPolicy=Never --set devArgs="\['upload_k8s_state_v4'\,'--verbose'\,'--endpoint'\,'http://192.168.1.157:9292'\]" cloudhealth/cloudhealth-collector

helm install cloudhealth-collector --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME,image.repository=metrics-collector-1,image.pullPolicy=Never --set devArgs="\['upload_k8s_state_v4'\,'--verbose'\,'--endpoint'\,'http://192.168.1.157:9292'\]" cloudhealth/cloudhealth-collector
helm install cloudhealth-collector --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME,image.repository=latest-libs-1,image.pullPolicy=Never --set devArgs="\['upload_k8s_state_v4'\,'--verbose'\,'--endpoint'\,'http://192.168.1.157:9292'\]" cloudhealth/cloudhealth-collector


--set "customEnvVars[0].name=JAVA_OPTS" --set 'customEnvVars[0].value="-Dhttps.proxyHost=$PROXY_SERVER -Dhttps.proxyPort=$PROXY_PORT -Dhttps.nonProxyHosts=kubernetes.default.svc"'

upload_k8s_state_v2 --verbose --endpoint http://192.168.1.157:9292


helm install cloudhealth-collector --debug --dry-run --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME,image.repository=latest-libs-06-13-3,image.pullPolicy=Never --set devArgs="\['upload_k8s_state_v4'\,'--verbose'\,'--endpoint'\,'http://192.168.1.157:9292'\]",podSecurityContext.fsGroup=2000,containerSecurityContext.readOnlyRootFilesystem=true,containerSecurityContext.runAsNonRoot=true,containerSecurityContext.runAsUser=1000,containerSecurityContext.capabilities.drop={ALL} ./cloudhealth-collector-1.1.3.tgz

helm install cloudhealth-collector --debug --dry-run --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME,image.repository=latest-libs-06-13-3,image.pullPolicy=Never --set devArgs="\['upload_k8s_state_v4'\,'--verbose'\,'--endpoint'\,'http://192.168.1.157:9292'\]" --set "customEnvVars[0].name=ENV4" --set "customEnvVars[0].value=VALUE4" --set serviceAccount.name=sample_service_account ./cloudhealth-collector-1.1.2.tgz



helm install cloudhealth-collector --set apiToken=$CHT_API_TOKEN,clusterName=$CHT_CLUSTER_NAME --set devArgs="\['upload_k8s_state_v3'\,'--verbose'\]" cloudhealth/cloudhealth-collector


helm upgrade -n default cloudhealth-collector --set apiToken=xxxxxxxxxxxxxxxxxxxxxxx,clusterName=emgenusdevkube --set nodeSelector."kubernetes\\.io/os"=linux cloudhealth/cloudhealth-collector

helm install cloudhealth-collector --debug --dry-run -n cloudhealth --set clusterName=test-cluster,apiToken=tttyyy cloudhealth/cloudhealth-collector --version 5.0.6-alpha


helm install cloudhealth-collector --debug --dry-run -n cloudhealth --set optimizer.enabled=true,optimizer.chapiKey=xyzabc,optimizer.image.repository=my-test-image-name,optimizer.image.pullPolicy=Never,clusterName=test-cluster,apiToken=tttyyy cloudhealth/cloudhealth-collector --version 5.0.6-alpha

helm install cloudhealth-collector --debug --dry-run -n cloudhealth --set optimizer.enabled=true,optimizer.chapiKey=xyzabc,clusterName=test-cluster,apiToken=tttyyy cloudhealth/cloudhealth-collector --version 5.0.6-alpha

